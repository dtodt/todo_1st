name: BuildDeployFirebase

on:
  workflow_run:
    types: [completed]
    workflows: [Tests]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: flutter-cache
          cache-path: ${{ runner.tool_cache }}/flutter
      - name: Create firebase options file
        run: echo $FIREBASE_OPTIONS | base64 -d > lib/firebase_options.dart
        env:
          FIREBASE_OPTIONS: ${{ secrets.FIREBASE_OPTIONS }}
      - name: Install dependencies
        run: flutter pub get
      - name: Generate Code with build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build web artifact
        run: flutter build web --no-pub --no-tree-shake-icons --release --source-maps --web-renderer=html
      - name: Cache build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}-${{ hashFiles('build/web/.last_build_id') }}
          restore-keys: |
            cache-build-web-${{ github.run_id }}-

  deploy_preview:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' }}

    outputs:
      url: ${{ steps.deploy-preview.outputs.url }}
      details_url: ${{ steps.deploy-preview.outputs.details_url }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Retrieve build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}
      - name: Firebase hosts deploy
        id: deploy-preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          channelId: preview-pr
          expires: 5d
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_1ST }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event != 'pull_request' && github.event.workflow_run.head_branch == 'main'}}

    outputs:
      url: ${{ steps.deploy-production.outputs.url }}
      details_url: ${{ steps.deploy-production.outputs.details_url }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Retrieve build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}
      - name: Firebase hosts deploy production
        id: deploy-production
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          channelId: live
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_1ST }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
