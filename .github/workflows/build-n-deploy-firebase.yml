name: BuildDeployFirebase

on:
  workflow_run:
    types: [completed]
    workflows: [Tests]
    paths-ignore:
      - 'android/**'
      - 'ios/**'

  workflow_dispatch:
    inputs:
      targetEnvironment:
        description: 'Environment to deploy'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IS_AUTOMATION_VALID: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
      IS_MANUAL_EXECUTION: ${{ github.event_name == 'workflow_dispatch' }}
    if: ${{ env.IS_AUTOMATION_VALID == true || env.IS_MANUAL_EXECUTION == true }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Flutter cache
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: flutter-cache
          cache-path: ${{ runner.tool_cache }}/flutter
      - name: Create firebase options file
        run: |
          echo $FIREBASE_OPTIONS | base64 -d > lib/firebase_options.dart
          flutter format lib/firebase_options.dart
        env:
          FIREBASE_OPTIONS: ${{ secrets.FIREBASE_OPTIONS }}
      - name: Install dependencies
        run: flutter pub get
      - name: Generate code with build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build web artifact
        run: flutter build web --no-pub --no-tree-shake-icons --release --source-maps --web-renderer=html
      - name: Generate sitemap
        uses: cicirello/generate-sitemap@v1.8.1
        with:
          base-url-path: ${{ secrets.FIREBASE_URL }}
          path-to-root: build/web
      - name: Cache build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}-${{ hashFiles('build/web/.last_build_id') }}
          restore-keys: |
            cache-build-web-${{ github.run_id }}-

  deploy_preview:
    needs: build
    runs-on: ubuntu-latest
    env:
      IS_MANUAL_PREVIEW: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.targetEnvironment == 'preview' }}
      # IS_AUTOMATION_PREVIEW: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request' }}
    if: ${{ env.IS_MANUAL_PREVIEW == true }}
    # if: ${{ env.IS_AUTOMATION_PREVIEW == true || env.IS_MANUAL_PREVIEW == true }} # temporary disabled

    outputs:
      url: ${{ steps.deploy-preview.outputs.details_url }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Retrieve build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}
      - name: Firebase hosts deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: deploy-preview
        with:
          channelId: ${{ github.run_id }}
          expires: 1d
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_1ST }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    env:
      IS_AUTOMATION_PRODUCTION: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.event != 'pull_request' && github.event.workflow_run.head_branch == 'main' }}
      IS_MANUAL_PRODUCTION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.targetEnvironment == 'production' }}
    if: ${{ env.IS_AUTOMATION_PRODUCTION == true || env.IS_MANUAL_PRODUCTION == true }}

    outputs:
      url: ${{ steps.deploy-production.outputs.details_url }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Retrieve build files
        uses: actions/cache@v2
        with:
          path: build/web
          key: cache-build-web-${{ github.run_id }}
      - name: Firebase hosts deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: deploy-production
        with:
          channelId: live
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_1ST }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
